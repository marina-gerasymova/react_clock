{"version":3,"sources":["components/CLock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","name","props","this","timerID","setInterval","tick","prevProps","setState","clearInterval","console","log","className","React","Component","App","useState","isClockVisible","setClockVisibility","Math","floor","random","clockName","setClockName","type","onClick","newName","ReactDOM","render","document","getElementById"],"mappings":"8MAGMA,E,4MACJC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,KAAM,EAAKC,MAAMD,M,kEAGE,IAAD,OAClBE,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,O,yCAIeC,GACbJ,KAAKD,MAAMD,OAASM,EAAUN,MAEhCE,KAAKK,SAAS,CACZP,KAAME,KAAKD,MAAMD,S,6CAMrBQ,cAAcN,KAAKC,W,6BAInBD,KAAKK,SAAS,CACZV,MAAM,IAAIC,MAAOC,uBAGnBU,QAAQC,IAAIR,KAAKN,MAAMC,Q,+BAIvB,OACE,yBAAKc,UAAU,SACb,wBAAIA,UAAU,cAAd,qBAEGT,KAAKN,MAAMI,MAEd,2CAEE,8BAEF,4BAAKE,KAAKN,MAAMC,W,GA7CJe,IAAMC,WCwCXC,G,MAtCH,WAAO,IAAD,EAC6BC,oBAAS,GADtC,mBACTC,EADS,KACOC,EADP,OAEkBF,mBAASG,KAAKC,MAAsB,IAAhBD,KAAKE,WAF3C,mBAETC,EAFS,KAEEC,EAFF,KAIhB,OACE,yBAAKX,UAAU,OACb,yBAAKA,UAAU,aAEXK,EAAiB,kBAAC,EAAD,CAAOhB,KAAMqB,IAAgB,GAEhD,4BACEE,KAAK,SACLZ,UAAU,cACVa,QAAS,kBAAMP,GAAoBD,KAElCA,EAAiB,OAAS,QAG7B,4BACEO,KAAK,SACLZ,UAAU,cACVa,QAAS,WACP,IAAMC,EAAUP,KAAKC,MAAsB,IAAhBD,KAAKE,UAGhCX,QAAQC,IAAR,qCACgCW,EADhC,eACgDI,IAEhDH,EAAaG,KAVjB,mBCnBRC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.490ad231.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n    name: this.props.name,\n  };\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        name: this.props.name,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date().toLocaleTimeString(),\n    });\n    // eslint-disable-next-line no-console\n    console.log(this.state.date);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <h1 className=\"App__title\">\n          React clock â„–\n          {this.state.name}\n        </h1>\n        <p>\n          Current time:\n          <br />\n        </p>\n        <h2>{this.state.date}</h2>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport { Clock };\n","import React, { useState } from 'react';\nimport { Clock } from './components/CLock';\n\nimport './App.scss';\n\nconst App = () => {\n  const [isClockVisible, setClockVisibility] = useState(true);\n  const [clockName, setClockName] = useState(Math.floor(Math.random() * 100));\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__time\">\n        {\n          isClockVisible ? <Clock name={clockName} /> : ''\n        }\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={() => setClockVisibility(!isClockVisible)}\n        >\n          {isClockVisible ? 'Hide' : 'Show'}\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={() => {\n            const newName = Math.floor(Math.random() * 100);\n\n            // eslint-disable-next-line no-console\n            console.log(\n              `The Clock was renamed from ${clockName} to ${newName}`,\n            );\n            setClockName(newName);\n          }}\n        >\n          Change name\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}